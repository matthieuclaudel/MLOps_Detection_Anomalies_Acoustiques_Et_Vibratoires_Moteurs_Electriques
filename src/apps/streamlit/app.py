import streamlit as st
import pandas as pd
import csv

def read_csv_file(file,separator):
    """
    Lecture robuste d'un fichier CSV avec d√©tection automatique des s√©parateurs.
    :param file: fichier t√©l√©charg√©
    :return: DataFrame pandas
    """
    try:
        # Utilise le module csv pour d√©tecter le d√©limiteur
        sample = file.read(1024).decode('utf-8')
        file.seek(0)  # Remet le curseur au d√©but
        dialect = csv.Sniffer().sniff(sample, delimiters=",;|")
        
        # Lit le CSV avec le d√©limiteur d√©tect√©
        df = pd.read_csv(file, delimiter=dialect.delimiter,decimal=separator)
        return df
    except Exception as e:
        st.error(f"Erreur lors de la lecture du fichier : {e}")
        return None
    
st.set_page_config(
    page_title="√âvaluation Acoustique",
    page_icon="üëã",
)

# Titre principal
st.title("Projet MLOps : Syst√®me d'√âvaluation Acoustique Bas√© sur l'IA")

# Sous-titre ou slogan
st.subheader("R√©volutionner le contr√¥le de la qualit√© acoustique gr√¢ce √† l'intelligence artificielle")

# Description du contexte
st.markdown("""
**Contexte :**  
L'entreprise vise √† moderniser son syst√®me d'√©valuation acoustique actuel, devenu obsol√®te et difficile √† maintenir.  
L'objectif est de **r√©duire les faux n√©gatifs** lors des contr√¥les qualit√© tout en optimisant les performances des lignes de production.
""")

# Objectifs principaux
st.markdown("""
**Objectifs du projet :**
- D√©ployer un mod√®le d'IA avanc√© pour am√©liorer la pr√©cision des diagnostics acoustiques.
- Assurer une **mise √† jour adaptative** des mod√®les en fonction des variations des conditions de production.
- Fournir une **interface de contr√¥le** avec un retour en temps r√©el via une API.
- Int√©grer le nouveau syst√®me √† l'infrastructure actuelle (Kubernetes, Grafana).
""")

# Synth√®se des b√©n√©fices
st.markdown("""
**B√©n√©fices attendus :**
- R√©duction des erreurs de d√©tection (faux n√©gatifs).
- Meilleure fiabilit√© des diagnostics.
- Optimisation des processus de production et de contr√¥le.
""")

# Footer ou mention importante
st.info("Ce projet est r√©alis√© en collaboration avec les √©quipes M√©thodes Industrielles et les experts en acoustique.")
# Gestion du fichier CSV via session_state
if "data" not in st.session_state:
    st.session_state.data = None
with st.sidebar:
    st.header("Upload and Select Data")
    separator = st.selectbox("S√©lectionnez un s√©parateur d√©cimal", [",", "."])
    uploaded_file = st.file_uploader("Choose a CSV file", type=['csv'])
    if uploaded_file is not None:
        df = read_csv_file(uploaded_file,separator)
        if df is not None:
            # V√©rifier si la colonne "Target" existe
            if "target" not in df.columns:
                # Ajouter la colonne avec une valeur par d√©faut de 0
                df["target"] = 0
                st.info("La colonne 'target' a √©t√© ajout√©e avec des valeurs par d√©faut √† 0.")

            st.session_state.data = df
            st.success("File successfully uploaded!")