# Default values for mongo-express.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @param nameOverride Partially override `mongo-express.fullname` template with a string (will prepend the release name)
nameOverride: ""

## @param fullnameOverride Fully override `mongo-express.fullname` template with a string
fullnameOverride: ""

## @param commonAnnotations Annotations to add to all deployed objects
commonAnnotations: {}

## @param commonLabels Labels to add to all deployed objects
commonLabels: {}

## @section Parameters

## @param replicaCount Number of replicas
replicaCount: 1

image:
  ## @param image.registry Image registry
  registry: docker.io

  ## @param image.repository Image repository
  repository: mongo-express

  ## @param image.tag Image tag
  tag: 1.0.2

  ## @param image.digest Image digest
  digest: ""

  ## @param image.pullPolicy Image pull policy
  pullPolicy: IfNotPresent

containerPorts:
  ## @param containerPorts.http Container port for HTTP
  http: 8081

service:
  ## @param service.annotations Service annotations
  annotations: {}

  ## @param service.type Service type
  type: ClusterIP

  ## @param service.clusterIP Static cluster IP address or None for headless service when service type is ClusterIP
  clusterIP:
  # clusterIP: 10.43.0.100

  ## @param service.loadBalancerIP Static load balancer IP address when service type is LoadBalancer
  loadBalancerIP:
  # loadBalancerIP: 10.0.0.100

  ## @param service.loadBalancerSourceRanges Source IP address ranges when service type is LoadBalancer
  loadBalancerSourceRanges:
    # - 10.0.0.0/24

  ## @param service.externalTrafficPolicy External traffic routing policy when service type is LoadBalancer or NodePort
  externalTrafficPolicy: Cluster

  ports:
    ## @param service.ports.http Service port for HTTP
    http: 8081

  nodePorts:
    ## @param service.nodePorts.http Service node port for HTTP when service type is LoadBalancer or NodePort
    http:
    # http: 30000

ingress:
  ## @param ingress.enabled Enable ingress controller resource
  enabled: false

  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress
  ingressClassName: ""

  ## @param ingress.pathType Ingress path type
  pathType: ImplementationSpecific

  ## @param ingress.annotations Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  ## @param ingress.hosts[0].host Hostname to your Mongo Express installation
  ## @param ingress.hosts[0].paths Paths within the url structure
  hosts:
    - host: mongo-express.local
      paths:
        - /

  ## @param ingress.tls TLS configuration
  tls: []
    # - secretName: mongo-express-tls
    #   hosts:
    #     - mongo-express.local

## @param resources CPU/Memory resource requests/limits
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @section Config parameters

## @param mongodbServer MongoDB host name or IP address
mongodbServer: mongodb

## @param mongodbPort MongoDB port
mongodbPort: 27017

## @param mongodbEnableAdmin Enable administrator access
mongodbEnableAdmin: true

## @param mongodbAdminUsername Administrator username
mongodbAdminUsername: root

## @param mongodbAdminPassword Administrator password
mongodbAdminPassword: "password"

## @param mongodbAuthUsername Database username (only needed if `mongodbEnableAdmin` is `false`)
mongodbAuthUsername: "api_ui"

## @param mongodbAuthPassword Database password (only needed if `mongodbEnableAdmin` is `false`)
mongodbAuthPassword: "api_ui"

## @param mongodbAuthDatabase Database name (only needed if `mongodbEnableAdmin` is `false`)
mongodbAuthDatabase: "production"

## @param siteBaseUrl Set the express baseUrl to ease mounting at a subdirectory
siteBaseUrl: /

## @param basicAuthUsername Mongo Express web login name
basicAuthUsername: "admin"

## @param basicAuthPassword Mongo Express web login password
basicAuthPassword: "admin"

## @param existingSecret Name of existing Secret to use
existingSecret: ""

## @param existingSecretKeyMongodbAdminPassword Key in existing Secret that contains administrator password
existingSecretKeyMongodbAdminPassword: mongodb-admin-password

## @param existingSecretKeyMongodbAuthPassword Key in existing Secret that contains database password
existingSecretKeyMongodbAuthPassword: mongodb-auth-password

## @param existingSecretKeySiteCookieSecret Key in existing Secret that contains string used by cookie-parser middleware to sign cookies
existingSecretKeySiteCookieSecret: site-cookie-secret

## @param existingSecretKeySiteSessionSecret Key in existing Secret that contains string used to sign the session ID cookie by express-session middleware
existingSecretKeySiteSessionSecret: site-session-secret

## @param existingSecretKeyBasicAuthPassword Key in existing Secret that contains Mongo Express web login password
existingSecretKeyBasicAuthPassword: basic-auth-password
